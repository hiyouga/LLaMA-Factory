# Full Fine-Tuning config for Qwen2.5-7B-Instruct using HuggingFace vLLM Flash Attention 3 kernel
# Uses kernels-community/vllm-flash-attn3 for optimized attention implementation
#
# Requirements:
#   - Install HF kernels: `pip install -e .[hf-kernels]`
#   - Log into WandB (`wandb login`) or set `report_to: none`
#   - Log into HF: `huggingface-cli login`
#
# Usage:
#   llamafactory-cli train examples/train_full/qwen2_5_full_sft_hf_kernel.yaml

### model
model_name_or_path: Qwen/Qwen2.5-7B-Instruct
trust_remote_code: true
rope_scaling: yarn  # YARN RoPE scaling - factor will be computed automatically
attn: kernels-community/vllm-flash-attn3  # HuggingFace kernel for optimized attention
enable_liger_kernel: true

### method
stage: sft
do_train: true
finetuning_type: full  # Full fine-tuning (not LoRA)
deepspeed: examples/deepspeed/ds_z3_partial_offload_config.json

### dataset
dataset: tbench_traces_sharegptv1  # You'll need to add this to data/dataset_info.json
template: qwen  # Qwen2.5 template
cutoff_len: 131072  # Match model_max_length
max_samples: null  # Use full dataset
overwrite_cache: true
preprocessing_num_workers: 64  # Match LIMO preprocessing workers
dataloader_num_workers: 8

### output  
output_dir: output/qwen2.5_7b_tbench_traces_hf_kernel
logging_steps: 5
save_steps: 50
plot_loss: true
overwrite_output_dir: true
save_only_model: true  # Save only model for DeepSpeed compatibility
report_to: wandb  # Set to 'none' to disable WandB

### train
per_device_train_batch_size: 1
gradient_accumulation_steps: 2
learning_rate: 2.0e-5
num_train_epochs: 5.0
lr_scheduler_type: cosine
warmup_ratio: 0.05
weight_decay: 0.03
max_grad_norm: 1.0e-3
bf16: true
gradient_checkpointing: true
ddp_timeout: 180000000